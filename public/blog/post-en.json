[
    {
        "badge": "article",
        "slug": "working-with-react-useeffect-hook",
        "title": "Working with React's useEffect Hook",
        "introduction": "React’s useEffect Hook is a powerful tool for managing side effects in function components. In this post, we explore common use cases, pitfalls, and best practices for using useEffect.",
        "sections": [
            {
                "slugTitle": "working-with-web-apis-localstorage",
                "content": [
                    {
                        "type": "heading",
                        "level": 2,
                        "text": "Trabajando con APIs Web (localStorage)"
                    },
                    {
                        "type": "paragraph",
                        "text": "El Hook useEffect se puede usar para interactuar con el localStorage del navegador. Aquí te mostramos qué almacenar, recuperar y limpiar datos usando useEffect."
                    },
                    {
                        "type": "image",
                        "src": "https://tsh.io/wp-content/uploads/2021/03/why-use-typescript-items2_.png",
                        "alt": "Trabajando con APIs Web (localStorage)"
                    },
                    {
                        "type": "note",
                        "text": "La función de limpieza garantiza que localStorage se borre cuando el componente se desmonte, pero considera mantener los datos persistentes para una mejor experiencia de usuario."
                    }
                ]
            },
            {
                "slugTitle": "getting-data-from-an-external-api",
                "content": [
                    {
                        "type": "heading",
                        "level": 2,
                        "text": "Obteniendo Datos Desde una API Externa"
                    },
                    {
                        "type": "paragraph",
                        "text": "El Hook useEffect se usa comúnmente para obtener datos desde APIs. Aquí tienes un ejemplo:"
                    },
                    {
                        "type": "image",
                        "src": "https://tsh.io/wp-content/uploads/2021/03/why-use-typescript-items2_.png",
                        "alt": "Obteniendo Datos Desde una API Externa"
                    },
                    {
                        "type": "note",
                        "text": "No siempre se requiere una función de limpieza para las llamadas a APIs."
                    }
                ]
            },
            {
                "slugTitle": "other-popular-side-effects",
                "content": [
                    {
                        "type": "heading",
                        "level": 2,
                        "text": "Otros Efectos Secundarios Populares"
                    }
                ],
                "subsections": [
                    {
                        "slugTitle": "subscribing-to-events",
                        "content": [
                            {
                                "type": "heading",
                                "level": 3,
                                "text": "Suscribiéndose a Eventos"
                            },
                            {
                                "type": "paragraph",
                                "text": "Puedes usar useEffect para gestionar suscripciones a eventos como los eventos de desplazamiento."
                            },
                            {
                                "type": "image",
                                "src": "https://tsh.io/wp-content/uploads/2021/03/why-use-typescript-items2_.png",
                                "alt": "Suscribiéndose a Eventos"
                            }
                        ]
                    },
                    {
                        "slugTitle": "modifying-the-document-title",
                        "content": [
                            {
                                "type": "heading",
                                "level": 3,
                                "text": "Modificando el TitledBorder del Documento"
                            },
                            {
                                "type": "paragraph",
                                "text": "Cambia el título del documento dinámicamente."
                            },
                            {
                                "type": "image",
                                "src": "https://tsh.io/wp-content/uploads/2021/03/why-use-typescript-items2_.png",
                                "alt": "Modificando el TitledBorder del Documento"
                            }
                        ]
                    },
                    {
                        "slugTitle": "managing-timers",
                        "content": [
                            {
                                "type": "heading",
                                "level": 3,
                                "text": "Gestionando Tiempos"
                            },
                            {
                                "type": "paragraph",
                                "text": "Configura intervalos y límpialos al hacer la limpieza."
                            },
                            {
                                "type": "image",
                                "src": "https://tsh.io/wp-content/uploads/2021/03/why-use-typescript-items2_.png",
                                "alt": "Gestionando Tiempos"
                            }
                        ]
                    }
                ]
            }
        ],
        "date": "November 6, 2024",
        "relatedSlug": "post-1"
    },
    {
        "badge": "article",
        "slug": "rendering-and-re-rendering-in-react",
        "title": "Rendering and Re-Rendering in React",
        "introduction": "In this article, we will look at how React rendering works, and I hope it helps you understand the useState and displaying contents in the browser.",
        "sections": [
            {
                "slugTitle": "rendering-stages",
                "content": [
                    {
                        "type": "heading",
                        "level": 2,
                        "text": "Rendering Stage"
                    },
                    {
                        "type": "paragraph",
                        "text": "React rendering occurs in three stages"
                    },
                    {
                        "type": "list",
                        "items": [
                            "Triggering a render",
                            "Rendering the component",
                            "Committing to DOM"
                        ]
                    },
                    {
                        "type": "image",
                        "src": "https://tsh.io/wp-content/uploads/2021/03/why-use-typescript-items2_.png",
                        "alt": "An image describing React rendering stages"
                    }
                ],
                "subsections": [
                    {
                        "slugTitle": "triggering-a-render",
                        "content": [
                            {
                                "type": "heading",
                                "level": 3,
                                "text": "Triggering a Render"
                            },
                            {
                                "type": "list",
                                "items": [
                                    "On initial render",
                                    "When the state of a component changes"
                                ]
                            }
                        ]
                    },
                    {
                        "slugTitle": "using-the-usestate-hook",
                        "content": [
                            {
                                "type": "heading",
                                "level": 3,
                                "text": "Using the useState Hook"
                            },
                            {
                                "type": "paragraph",
                                "text": "React useState hook is a function that takes an initial value of any JavaScript data structure and returns an array containing two elements, the value passed as an argument and a setter function for updating the state."
                            },
                            {
                                "type": "code",
                                "language": "javascript",
                                "code": "import { useState } from 'react';\n\nconst [state, setState] = useState('');"
                            }
                        ]
                    }
                ]
            }
        ],
        "date": "November 6, 2024",
        "relatedSlug": "post-2"
    }
]